version: '2'
services:
  blog:
    image: tevjef/alpine-ghost
    restart: on-failure:3
    volumes:
      - '/var/lib/ghost:/var/lib/ghost'
    environment:
      - NODE_ENV=production
      - GHOST_DOMAIN=https://blog.${BASE_URL}/
      - GHOST_PROD_FORCE_ADMIN_SSL=true
      - VIRTUAL_HOST=blog.${BASE_URL}
      - LETSENCRYPT_HOST=blog.${BASE_URL}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    depends_on:
      - fluentd
    logging:
      driver: fluentd
      options:
        tag: "docker.blog"
    labels:
      fluentd.tag: "blog"
  ein:
    image: 'tevjef/uct-core:ein${ENV}'
    links:
      - postgresql
      - redis
    restart: on-failure:3
    ports:
      - '13100'
    depends_on:
      - fluentd
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    logging:
      driver: fluentd
      options:
        tag: "docker.core.ein"
    labels:
      fluentd.tag: "core.ein"
      fluentd.influxdb.tags: "[\"level\", \"university_name\"]"

  grafana:
    image: grafana/grafana:4.0.1
    restart: on-failure:3
    links:
      - influxdb
    volumes:
      - /var/lib/uct/grafana:/var/lib/grafana
    environment:
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
      - GF_SERVER_ROOT_URL=https://grafana.${BASE_URL}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_EXTERNAL_IMAGE_STORAGE_PROVIDER=s3
      - GF_EXTERNAL_IMAGE_STORAGE_S3_BUCKET_URL=http://grafana.uct.s3.amazonaws.com/
      - GF_EXTERNAL_IMAGE_STORAGE_S3_ACCESS_KEY=${AWS_KEY_ID}
      - GF_EXTERNAL_IMAGE_STORAGE_S3_SECRET_KEY=${AWS_SECRET_KEY}
      - VIRTUAL_HOST=grafana.${BASE_URL}
      - LETSENCRYPT_HOST=grafana.${BASE_URL}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    depends_on:
      - fluentd
    logging:
      driver: fluentd
      options:
        tag: "docker.grafana"
    labels:
      fluentd.tag: "grafana"

  hermes:
    image: tevjef/uct-core:hermes${ENV}
    restart: always
    ports:
      - '13200'
    depends_on:
      - postgresql
      - redis
      - fluentd
    links:
      - postgresql
    environment:
      - ENABLE_FCM=${ENABLE_FCM}
      - FCM_API_KEY=${FCM_API_KEY}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    logging:
      driver: fluentd
      options:
        tag: "docker.core.hermes"
    labels:
      fluentd.tag: "core.hermes"
      fluentd.influxdb.tags: "[\"level\", \"status\", \"university_name\"]"

  influxdb:
    image: tevjef/influxdb
    restart: unless-stopped
    volumes:
      - /var/lib/uct/influxdb:/var/lib/influxdb
    ports:
      - "8086:8086"
      - "8083"
    environment:
      - VIRTUAL_PORT=8083
      - VIRTUAL_HOST=influxdb.${BASE_URL}
      - INFLUXDB_CREATE_DB=system;universityct
      - INFLUXDB_HTTP_AUTH_ENABLED=true
      - INFLUXDB_ADMIN_USER=${INFLUXDB_ADMIN_USER}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
    depends_on:
      - fluentd
    logging:
      driver: fluentd
      options:
        tag: "docker.influxdb"
    labels:
      fluentd.tag: "influxdb"

  julia:
    image: tevjef/uct-core:julia${ENV}
    restart: always
    ports:
      - '13201'
    depends_on:
      - postgresql
      - redis
      - fluentd
    links:
      - postgresql
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    logging:
      driver: fluentd
      options:
        tag: "docker.core.julia"
    labels:
      fluentd.tag: "core.julia"
      fluentd.influxdb.tags: "[\"level\", \"university_name\"]"

  nginx:
    container_name: nginx
    restart: on-failure:3
    image: tevjef/uct-core:nginx${ENV}
    ports:
      - "80:80"
      - "443:443"
      - "127.0.0.1:8090:8090"
    volumes:
      - /etc/nginx/certs:/etc/nginx/certs:ro
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - /etc/nginx/conf.d
    depends_on:
      - fluentd
    logging:
      driver: fluentd
      options:
        tag: "docker.nginx"
    labels:
      fluentd.tag: "nginx"
      fluentd.influxdb.tags: "[\"host\", \"status\"]"

  nginx-gen:
    image: tevjef/uct-core:nginx-gen${ENV}
    restart: on-failure:3
    command: -notify-sighup nginx -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes_from:
      - nginx
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    logging:
      driver: fluentd
      options:
        tag: "docker.nginx-gen"
    labels:
      fluentd.tag: "nginx-gen"

  nginx-letsencrypt:
    restart: on-failure:3
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - /etc/nginx/certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    volumes_from:
      - nginx
    depends_on:
      - fluentd
    logging:
      driver: fluentd
      options:
        tag: "docker.letsencrypt"
    labels:
      fluentd.tag: "letsencrypt"

  njit:
    image: tevjef/uct-core:njit${ENV}
    restart: on-failure:3
    ports:
      - '13304'
    depends_on:
      - redis
      - fluentd
    links:
      - redis
    environment:
      - HTTP_PROXY_URL=${HTTP_PROXY_URL}
      - HTTP_PROXY_USER=${HTTP_PROXY_USER}
      - HTTP_PROXY_PASS=${HTTP_PROXY_PASS}

    logging:
      driver: fluentd
      options:
        tag: "docker.core.njit"
    labels:
      fluentd.tag: "core.njit"
      fluentd.influxdb.tags: "[\"level\", \"scraper_name\"]"

  postgresql:
    image: tevjef/uct-core:postgresql${ENV}
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - /var/lib/uct/postgresql:/var/lib/postgresql
    environment:
     - POSTGRES_USER=${POSTGRES_USER}
     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
     - POSTGRES_DB=${POSTGRES_DB}
    depends_on:
      - fluentd
    logging:
      driver: fluentd
      options:
        tag: "docker.postgresql"
    labels:
      fluentd.tag: "postgresql"

  redis:
    image: redis:3.2-alpine
    restart: always
    depends_on:
      - fluentd
    logging:
      driver: fluentd
      options:
        tag: "docker.redis"
    labels:
      fluentd.tag: "redis"

  rutgers-cm:
    image: tevjef/uct-core:rutgers${ENV}
    restart: on-failure:3
    ports:
      - '13302'
    depends_on:
      - redis
      - fluentd
    links:
      - redis
    environment:
      - RUTGERS_CAMPUS=CM
      - JET_SCRAPER_NAME=rutgers-cm
    logging:
      driver: fluentd
      options:
        tag: "docker.core.rutgers-cm"
    labels:
      fluentd.tag: "core.rutgers-cm"
      fluentd.influxdb.tags: "[\"level\", \"scraper_name\"]"

  rutgers-nb:
    image: tevjef/uct-core:rutgers${ENV}
    restart: on-failure:3
    ports:
      - '13303'
    depends_on:
      - redis
      - fluentd
    links:
      - redis
    environment:
      - RUTGERS_CAMPUS=NB
      - JET_SCRAPER_NAME=rutgers-nb
    logging:
      driver: fluentd
      options:
        tag: "docker.core.rutgers-nb"
    labels:
      fluentd.tag: "core.rutgers-nb"
      fluentd.influxdb.tags: "[\"level\", \"scraper_name\"]"

  rutgers-nk:
    image: tevjef/uct-core:rutgers${ENV}
    restart: on-failure:3
    ports:
      - '13301'
    depends_on:
      - redis
      - fluentd
    links:
      - redis
    environment:
      - RUTGERS_CAMPUS=NK
      - JET_SCRAPER_NAME=rutgers-nk
    logging:
      driver: fluentd
      options:
        tag: "docker.core.rutgers-nk"
    labels:
      fluentd.tag: "core.rutgers-nk"
      fluentd.influxdb.tags: "[\"level\", \"scraper_name\"]"

  spike:
    restart: on-failure:3
    depends_on:
      - fluentd
    image: tevjef/uct-core:spike${ENV}
    links:
      - postgresql
      - redis
    ports:
      - '13400'
    environment:
      - GIN_MODE=release
      - VIRTUAL_HOST=api.${BASE_URL}
      - VIRTUAL_PORT=9876
      - LETSENCRYPT_HOST=api.${BASE_URL}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    logging:
      driver: fluentd
      options:
        tag: "docker.core.spike"
    labels:
      fluentd.tag: "core.spike"
      fluentd.influxdb.tags: "[\"level\", \"university_name\", \"user-agent\", \"method\", \"status\", \"handler\"]"

  telegraf:
    image: tevjef/uct-core:telegraf${ENV}
    restart: always
    links:
      - postgresql
      - redis
      - influxdb
      - ein
      - spike
      - hermes
      - julia
    volumes:
      - '/var/run/docker.sock:/tmp/docker.sock:ro'
      - '/var/run/utmp:/var/run/utmp:ro'
    logging:
      driver: fluentd
      options:
        tag: "docker.telegraf"
    labels:
      fluentd.tag: "telegraf"
    environment:
      - AWS_KEY_ID=${AWS_KEY_ID}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - AWS_REGION=${AWS_REGION}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - RESPONSE_ENDPOINT=https://api.${BASE_URL}/v2/universities
      - INFLUXDB_ADMIN_USER=${INFLUXDB_ADMIN_USER}
      - INFLUXDB_DATABASE=system
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
  fluentd:
    container_name: fluentd
    restart: always
    image: tevjef/uct-core:fluentd${ENV}
    ports:
      - '24224:24224'
    volumes_from:
      - fluentd-gen

  fluentd-gen:
    container_name: fluentd-gen
    restart: always
    image: tevjef/uct-core:fluentd-gen${ENV}
    command: -notify-sighup fluentd -wait 2s -watch /etc/docker-gen/templates/fluent.conf.tmpl /fluentd/etc/fluent.conf
    volumes:
      - /fluentd/etc
      - /var/run/docker.sock:/tmp/docker.sock:ro
    environment:
      - AWS_KEY_ID=${AWS_KEY_ID}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - AWS_REGION=${AWS_REGION}
      - INFLUXDB_ADMIN_USER=${INFLUXDB_ADMIN_USER}
      - INFLUXDB_DATABASE=universityct
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}

networks:
  default:
    external:
      name: uct_default