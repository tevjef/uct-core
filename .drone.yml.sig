eyJhbGciOiJIUzI1NiJ9.d29ya3NwYWNlOgogIGJhc2U6IC9nbwogIHBhdGg6IHNyYy9naXRodWIuY29tL3RldmplZi91Y3QtY29yZQoKcGlwZWxpbmU6CiAgY29yZToKICAgIGltYWdlOiBnb2xhbmc6MS42LjMtYWxwaW5lCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBHT1BBVEg9L2dvCiAgICBjb21tYW5kczoKICAgICAgLSBnbyB2ZXJzaW9uCiAgICAgIC0gZXhwb3J0IEdPT1M9bGludXgKICAgICAgLSBleHBvcnQgR09BUkNIPWFtZDY0CiAgICAgIC0gYXBrIHVwZGF0ZQogICAgICAtIGFwayAtLW5vLWNhY2hlIGFkZCBjYS1jZXJ0aWZpY2F0ZXMgb3BlbnNzbCBnaXQKICAgICAgLSB1cGRhdGUtY2EtY2VydGlmaWNhdGVzCiAgICAgIC0gZXhwb3J0IFBBVEg9JFBBVEg6JEdPUEFUSC9iaW4KICAgICAgLSB3Z2V0IC1xIGh0dHBzOi8vZ2l0aHViLmNvbS9NYXN0ZXJtaW5kcy9nbGlkZS9yZWxlYXNlcy9kb3dubG9hZC92MC4xMi4zL2dsaWRlLXYwLjEyLjMtbGludXgtYW1kNjQudGFyLmd6CiAgICAgIC0gdGFyIC14emYgZ2xpZGUtdjAuMTIuMy1saW51eC1hbWQ2NC50YXIuZ3oKICAgICAgLSBtdiBsaW51eC1hbWQ2NC9nbGlkZSAvdXNyL2JpbgogICAgICAtIGdsaWRlIGluc3RhbGwKICAgICAgLSBleHBvcnQgUEFUSD0kUEFUSDokR09QQVRIL2JpbgogICAgICAtIGdvIGluc3RhbGwgLXYgZ2l0aHViLmNvbS90ZXZqZWYvdWN0LWNvcmUvZWluCiAgICAgIC0gZ28gaW5zdGFsbCAtdiBnaXRodWIuY29tL3RldmplZi91Y3QtY29yZS9oZXJtZXMKICAgICAgLSBnbyBpbnN0YWxsIC12IGdpdGh1Yi5jb20vdGV2amVmL3VjdC1jb3JlL2p1bGlhCiAgICAgIC0gZ28gaW5zdGFsbCAtdiBnaXRodWIuY29tL3RldmplZi91Y3QtY29yZS9zY3JhcGVycy9ydXRnZXJzCiAgICAgIC0gZ28gaW5zdGFsbCAtdiBnaXRodWIuY29tL3RldmplZi91Y3QtY29yZS9zY3JhcGVycy9uaml0CiAgICAgIC0gZ28gaW5zdGFsbCAtdiBnaXRodWIuY29tL3RldmplZi91Y3QtY29yZS9qZXQKICAgICAgLSBnbyBpbnN0YWxsIC12IGdpdGh1Yi5jb20vdGV2amVmL3VjdC1jb3JlL3NwaWtlCiAgICB3aGVuOgogICAgICBldmVudDogW3B1c2gsIHB1bGxfcmVxdWVzdCwgdGFnLCBkZXBsb3ltZW50XQoKICBjb21tb246CiAgICBpbWFnZTogbGlicmFyeS9kb2NrZXI6ZGluZAogICAgY29tbWFuZHM6CiAgICAgIC0gY3AgL2dvL2Jpbi9laW4gZG9ja2VyL2Vpbi8KICAgICAgLSBjcCAvZ28vYmluL3NwaWtlIGRvY2tlci9zcGlrZS8KICAgICAgLSBjcCAvZ28vYmluL2hlcm1lcyBkb2NrZXIvaGVybWVzLwogICAgICAtIGNwIC9nby9iaW4vanVsaWEgZG9ja2VyL2p1bGlhLwogICAgICAtIGNwIC9nby9iaW4vcnV0Z2VycyBkb2NrZXIvcnV0Z2Vycy8KICAgICAgLSBjcCAvZ28vYmluL25qaXQgZG9ja2VyL25qaXQvCiAgICAgIC0gY3AgL2dvL2Jpbi9qZXQgZG9ja2VyL25qaXQvCiAgICAgIC0gY3AgL2dvL2Jpbi9qZXQgZG9ja2VyL3J1dGdlcnMvCgogICAgICAtIGNwIGNvbW1vbi9jb25mL2NvbmZpZy50b21sIGRvY2tlci9laW4vCiAgICAgIC0gY3AgY29tbW9uL2NvbmYvY29uZmlnLnRvbWwgZG9ja2VyL3NwaWtlLwogICAgICAtIGNwIGNvbW1vbi9jb25mL2NvbmZpZy50b21sIGRvY2tlci9oZXJtZXMvCiAgICAgIC0gY3AgY29tbW9uL2NvbmYvY29uZmlnLnRvbWwgZG9ja2VyL2p1bGlhLwogICAgICAtIGNwIGNvbW1vbi9jb25mL2NvbmZpZy50b21sIGRvY2tlci9ydXRnZXJzLwogICAgICAtIGNwIGNvbW1vbi9jb25mL2NvbmZpZy50b21sIGRvY2tlci9uaml0LwogICAgd2hlbjoKICAgICAgYnJhbmNoOiBbbWFzdGVyLCBzdGFnaW5nXQogICAgICBldmVudDogW3B1c2gsIHRhZywgZGVwbG95bWVudF0KCiAgcHJvZHVjdGlvbjoKICAgIGltYWdlOiBsaWJyYXJ5L2RvY2tlcjpkaW5kCiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgbG9naW4gLS11c2VybmFtZT0kRE9DS0VSX1VTRVJOQU1FIC0tcGFzc3dvcmQ9JERPQ0tFUl9QQVNTV09SRAoKICAgICAgLSBkb2NrZXIgYnVpbGQgLXQgdGV2amVmL3VjdC1jb3JlOmVpbiAtZiBkb2NrZXIvZWluL0RvY2tlcmZpbGUgZG9ja2VyL2VpbgogICAgICAtIGRvY2tlciBidWlsZCAtdCB0ZXZqZWYvdWN0LWNvcmU6c3Bpa2UgLWYgZG9ja2VyL3NwaWtlL0RvY2tlcmZpbGUgZG9ja2VyL3NwaWtlCiAgICAgIC0gZG9ja2VyIGJ1aWxkIC10IHRldmplZi91Y3QtY29yZTpoZXJtZXMgLWYgZG9ja2VyL2hlcm1lcy9Eb2NrZXJmaWxlIGRvY2tlci9oZXJtZXMKICAgICAgLSBkb2NrZXIgYnVpbGQgLXQgdGV2amVmL3VjdC1jb3JlOmp1bGlhIC1mIGRvY2tlci9qdWxpYS9Eb2NrZXJmaWxlIGRvY2tlci9qdWxpYQogICAgICAtIGRvY2tlciBidWlsZCAtdCB0ZXZqZWYvdWN0LWNvcmU6cnV0Z2VycyAtZiBkb2NrZXIvcnV0Z2Vycy1jbS9Eb2NrZXJmaWxlIGRvY2tlci9ydXRnZXJzCiAgICAgIC0gZG9ja2VyIGJ1aWxkIC10IHRldmplZi91Y3QtY29yZTpuaml0IC1mIGRvY2tlci9uaml0L0RvY2tlcmZpbGUgZG9ja2VyL25qaXQKICAgICAgLSBkb2NrZXIgYnVpbGQgLXQgdGV2amVmL3VjdC1jb3JlOmZsdWVudGQgLWYgc3VwcG9ydC9mbHVlbnRkL0RvY2tlcmZpbGUgc3VwcG9ydC9mbHVlbnRkCiAgICAgIC0gZG9ja2VyIGJ1aWxkIC10IHRldmplZi91Y3QtY29yZTpmbHVlbnRkLWdlbiAtZiBzdXBwb3J0L2ZsdWVudGQvZ2VuL0RvY2tlcmZpbGUgc3VwcG9ydC9mbHVlbnRkL2dlbgogICAgICAtIGRvY2tlciBidWlsZCAtdCB0ZXZqZWYvdWN0LWNvcmU6bmdpbnggLWYgc3VwcG9ydC9uZ2lueC9Eb2NrZXJmaWxlIHN1cHBvcnQvbmdpbngKICAgICAgLSBkb2NrZXIgYnVpbGQgLXQgdGV2amVmL3VjdC1jb3JlOm5naW54LWdlbiAtZiBzdXBwb3J0L25naW54L2dlbi9Eb2NrZXJmaWxlIHN1cHBvcnQvbmdpbngvZ2VuCiAgICAgIC0gZG9ja2VyIGJ1aWxkIC10IHRldmplZi91Y3QtY29yZTpwb3N0Z3Jlc3FsIC1mIHN1cHBvcnQvcG9zdGdyZXNxbC9Eb2NrZXJmaWxlIHN1cHBvcnQvcG9zdGdyZXNxbAogICAgICAtIGRvY2tlciBidWlsZCAtdCB0ZXZqZWYvdWN0LWNvcmU6dGVsZWdyYWYgLWYgc3VwcG9ydC90ZWxlZ3JhZi9Eb2NrZXJmaWxlIHN1cHBvcnQvdGVsZWdyYWYKCiAgICAgIC0gZG9ja2VyIHB1c2ggdGV2amVmL3VjdC1jb3JlOmVpbgogICAgICAtIGRvY2tlciBwdXNoIHRldmplZi91Y3QtY29yZTpzcGlrZQogICAgICAtIGRvY2tlciBwdXNoIHRldmplZi91Y3QtY29yZTpoZXJtZXMKICAgICAgLSBkb2NrZXIgcHVzaCB0ZXZqZWYvdWN0LWNvcmU6anVsaWEKICAgICAgLSBkb2NrZXIgcHVzaCB0ZXZqZWYvdWN0LWNvcmU6cnV0Z2VycwogICAgICAtIGRvY2tlciBwdXNoIHRldmplZi91Y3QtY29yZTpuaml0CiAgICAgIC0gZG9ja2VyIHB1c2ggdGV2amVmL3VjdC1jb3JlOmZsdWVudGQKICAgICAgLSBkb2NrZXIgcHVzaCB0ZXZqZWYvdWN0LWNvcmU6Zmx1ZW50ZC1nZW4KICAgICAgLSBkb2NrZXIgcHVzaCB0ZXZqZWYvdWN0LWNvcmU6bmdpbngKICAgICAgLSBkb2NrZXIgcHVzaCB0ZXZqZWYvdWN0LWNvcmU6bmdpbngtZ2VuCiAgICAgIC0gZG9ja2VyIHB1c2ggdGV2amVmL3VjdC1jb3JlOnBvc3RncmVzcWwKICAgICAgLSBkb2NrZXIgcHVzaCB0ZXZqZWYvdWN0LWNvcmU6dGVsZWdyYWYKICAgIHZvbHVtZXM6CiAgICAgIC0gL3Zhci9ydW4vZG9ja2VyLnNvY2s6L3Zhci9ydW4vZG9ja2VyLnNvY2sKICAgIHdoZW46CiAgICAgIGJyYW5jaDogbWFzdGVyCiAgICAgIGV2ZW50OiBbcHVzaCwgdGFnLCBkZXBsb3ltZW50XQoKICBzdGFnaW5nOgogICAgaW1hZ2U6IGxpYnJhcnkvZG9ja2VyOmRpbmQKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBsb2dpbiAtLXVzZXJuYW1lPSRET0NLRVJfVVNFUk5BTUUgLS1wYXNzd29yZD0kRE9DS0VSX1BBU1NXT1JECgogICAgICAtIGRvY2tlciBidWlsZCAtdCB0ZXZqZWYvdWN0LWNvcmU6ZWluLXN0YWdpbmcgLWYgZG9ja2VyL2Vpbi9Eb2NrZXJmaWxlIGRvY2tlci9laW4KICAgICAgLSBkb2NrZXIgYnVpbGQgLXQgdGV2amVmL3VjdC1jb3JlOnNwaWtlLXN0YWdpbmcgLWYgZG9ja2VyL3NwaWtlL0RvY2tlcmZpbGUgZG9ja2VyL3NwaWtlCiAgICAgIC0gZG9ja2VyIGJ1aWxkIC10IHRldmplZi91Y3QtY29yZTpoZXJtZXMtc3RhZ2luZyAtZiBkb2NrZXIvaGVybWVzL0RvY2tlcmZpbGUgZG9ja2VyL2hlcm1lcwogICAgICAtIGRvY2tlciBidWlsZCAtdCB0ZXZqZWYvdWN0LWNvcmU6anVsaWEtc3RhZ2luZyAtZiBkb2NrZXIvanVsaWEvRG9ja2VyZmlsZSBkb2NrZXIvanVsaWEKICAgICAgLSBkb2NrZXIgYnVpbGQgLXQgdGV2amVmL3VjdC1jb3JlOnJ1dGdlcnMtc3RhZ2luZyAtZiBkb2NrZXIvcnV0Z2Vycy9Eb2NrZXJmaWxlIGRvY2tlci9ydXRnZXJzCiAgICAgIC0gZG9ja2VyIGJ1aWxkIC10IHRldmplZi91Y3QtY29yZTpuaml0LXN0YWdpbmcgLWYgZG9ja2VyL25qaXQvRG9ja2VyZmlsZSBkb2NrZXIvbmppdAogICAgICAtIGRvY2tlciBidWlsZCAtdCB0ZXZqZWYvdWN0LWNvcmU6Zmx1ZW50ZC1zdGFnaW5nIC1mIHN1cHBvcnQvZmx1ZW50ZC9Eb2NrZXJmaWxlIHN1cHBvcnQvZmx1ZW50ZAogICAgICAtIGRvY2tlciBidWlsZCAtdCB0ZXZqZWYvdWN0LWNvcmU6Zmx1ZW50ZC1nZW4tc3RhZ2luZyAtZiBzdXBwb3J0L2ZsdWVudGQvZ2VuL0RvY2tlcmZpbGUgc3VwcG9ydC9mbHVlbnRkL2dlbgogICAgICAtIGRvY2tlciBidWlsZCAtdCB0ZXZqZWYvdWN0LWNvcmU6bmdpbngtc3RhZ2luZyAtZiBzdXBwb3J0L25naW54L0RvY2tlcmZpbGUgc3VwcG9ydC9uZ2lueAogICAgICAtIGRvY2tlciBidWlsZCAtdCB0ZXZqZWYvdWN0LWNvcmU6bmdpbngtZ2VuLXN0YWdpbmcgLWYgc3VwcG9ydC9uZ2lueC9nZW4vRG9ja2VyZmlsZSBzdXBwb3J0L25naW54L2dlbgogICAgICAtIGRvY2tlciBidWlsZCAtdCB0ZXZqZWYvdWN0LWNvcmU6cG9zdGdyZXNxbC1zdGFnaW5nIC1mIHN1cHBvcnQvcG9zdGdyZXNxbC9Eb2NrZXJmaWxlIHN1cHBvcnQvcG9zdGdyZXNxbAogICAgICAtIGRvY2tlciBidWlsZCAtdCB0ZXZqZWYvdWN0LWNvcmU6dGVsZWdyYWYtc3RhZ2luZyAtZiBzdXBwb3J0L3RlbGVncmFmL0RvY2tlcmZpbGUgc3VwcG9ydC90ZWxlZ3JhZgoKICAgICAgLSBkb2NrZXIgcHVzaCB0ZXZqZWYvdWN0LWNvcmU6ZWluLXN0YWdpbmcKICAgICAgLSBkb2NrZXIgcHVzaCB0ZXZqZWYvdWN0LWNvcmU6c3Bpa2Utc3RhZ2luZwogICAgICAtIGRvY2tlciBwdXNoIHRldmplZi91Y3QtY29yZTpoZXJtZXMtc3RhZ2luZwogICAgICAtIGRvY2tlciBwdXNoIHRldmplZi91Y3QtY29yZTpqdWxpYS1zdGFnaW5nCiAgICAgIC0gZG9ja2VyIHB1c2ggdGV2amVmL3VjdC1jb3JlOnJ1dGdlcnMtc3RhZ2luZwogICAgICAtIGRvY2tlciBwdXNoIHRldmplZi91Y3QtY29yZTpuaml0LXN0YWdpbmcKICAgICAgLSBkb2NrZXIgcHVzaCB0ZXZqZWYvdWN0LWNvcmU6Zmx1ZW50ZC1zdGFnaW5nCiAgICAgIC0gZG9ja2VyIHB1c2ggdGV2amVmL3VjdC1jb3JlOmZsdWVudGQtZ2VuLXN0YWdpbmcKICAgICAgLSBkb2NrZXIgcHVzaCB0ZXZqZWYvdWN0LWNvcmU6bmdpbngtc3RhZ2luZwogICAgICAtIGRvY2tlciBwdXNoIHRldmplZi91Y3QtY29yZTpuZ2lueC1nZW4tc3RhZ2luZwogICAgICAtIGRvY2tlciBwdXNoIHRldmplZi91Y3QtY29yZTpwb3N0Z3Jlc3FsLXN0YWdpbmcKICAgICAgLSBkb2NrZXIgcHVzaCB0ZXZqZWYvdWN0LWNvcmU6dGVsZWdyYWYtc3RhZ2luZwogICAgdm9sdW1lczoKICAgICAgLSAvdmFyL3J1bi9kb2NrZXIuc29jazovdmFyL3J1bi9kb2NrZXIuc29jawogICAgd2hlbjoKICAgICAgYnJhbmNoOiBzdGFnaW5nCiAgICAgIGV2ZW50OiBbcHVzaCwgdGFnLCBkZXBsb3ltZW50XQ._pGE8x45ejl4jTpgWXl6UWF0_KzWrys6sT2xdcOkyWQ